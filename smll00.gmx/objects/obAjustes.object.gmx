<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicializar

estado = 0;
estado0 = 0;
for( i=0; i&lt;=8; i+=1 ) indice[i] = 0;

j1_existe = joystick_exists( 1 );
alarm[0] = 60;

image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Checar si est� conectado el joystick 1

j1_existe = joystick_exists( 1 );
alarm[0] = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ejecutar scripts de control

scTeclado();
scJoystick();
scControl();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Estado 0: Men� ajustes

if( estado == 0 )
{
    if( izq_prs or der_prs ) //mover cursor
    {
        sound_play( snPatear );
        indice[0] = not indice[0];
    }
    if( slt_prs or psa_prs ) //seleccionar
    {
        sound_play( snPisar );
        if( indice[0] == 0 )
        {
            estado0 = 1;//ir a men� sonido
        }
        else
        {
            estado0 = 4;//ir a men� control
        }
    }
    if( atq_prs ) //regresar al t�tulo
    {
        sound_play( snPisar );
        room_goto( rmTitulo );
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Estado 1: Men� Sonido

if( estado == 1 )
{
    if( izq_prs or der_prs ) //mover cursor
    {
        sound_play( snPatear );
        indice[1] = not indice[1];
    }
    if( slt_prs or psa_prs ) //seleccionar
    {
        sound_play( snPisar );
        if( indice[1] == 0 )
        {
            estado0 = 2; //ir a volumen de m�sica
        }
        else
        {
            estado0 = 3; //ir a volumen de efectos
        }
    }
    if( atq_prs ) //regresar a men� ajustes
    {
        sound_play( snPisar );
        estado0 = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Estado 2: Volumen m�sica

if( estado == 2 )
{
    if( izq_prs and vol_mus &gt; 0 ) //bajar volumen
    {
        vol_mus -= 1;
        scVolumenMusica();
        sound_play( snAtacar );
    }
    if( der_prs and vol_mus &lt; 10 ) //subir volumen
    {
        vol_mus += 1;
        scVolumenMusica();
        sound_play( snAtacar );
    }
    if( slt_prs or atq_prs or psa_prs )
    {
        estado0 = 1; //regresar a men� sonido
        sound_play( snPisar );
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Estado 3: Volumen efectos

if( estado == 3 )
{
    if( izq_prs and vol_efc &gt; 0 ) //bajar volumen
    {
        vol_efc -= 1;
        scVolumenEfectos();
        sound_play( snAtacar );
    }
    if( der_prs and vol_efc &lt; 10 ) //subir volumen
    {
        vol_efc += 1;
        scVolumenEfectos();
        sound_play( snAtacar );
    }
    if( slt_prs or atq_prs or psa_prs )
    {
        estado0 = 1; //regresar a men� sonido
        sound_play( snPisar );
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Estado 4: Men� control

if( estado == 4 )
{
    if( izq_prs or der_prs ) //mover cursor
    {
        sound_play( snPatear );
        indice[4] = not indice[4];
    }
    if( slt_prs or psa_prs ) //seleccionar
    {
        if( indice[4] == 0 )
        {
            sound_play( snPisar );
            estado0 = 5; //ir a men� teclado
        }
        else
        {
            if( j1_existe )
            {
                sound_play( snPisar );
                estado0 = 7; //ir a men� joystick
            }
            else
            {//no se puede seleccionar porque no hay joystick
                sound_play( snTopar );
            }
        }
    }
    if( atq_prs )
    {
        sound_play( snPisar )
        estado0 = 0; //ir a men� ajustes
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Estado 5: Men� teclado

if( estado == 5 )
{
    if( izq_prs or der_prs ) //mover cursor
    {
        sound_play( snPatear );
        indice[5] = not indice[5];
    }
    if( atq_prs )
    {
        sound_play( snPisar );
        estado0 = 4; //regresar a men� control
    }
    if( slt_prs or psa_prs ) //seleccionar
    {
        if( indice[5] == 0 )
        {
            sound_play( snPisar );
            estado0 = 6; //ir a definir (teclado)
            indice[6] = 0; //desde el primer �ndice
        }
        else
        {
            sound_play( snMoneda );
            scReiniciarTeclado();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Estado 6: Definir teclado

if( estado == 6 )
{
    if( keyboard_check_pressed( vk_anykey ) ) //modificar tecla
    {
        sound_play( snAtacar );
        ini_open( "smll.ini" )
        switch( indice[6] )
        {
            case 0: //izquierda
                t_izq = keyboard_lastkey;
                ini_write_real( "Teclado", "izquierda", t_izq );
                break;
            case 1: //derecha
                t_der = keyboard_lastkey;
                ini_write_real( "Teclado", "derecha", t_der );
                break;
            case 2: //salto
                t_slt = keyboard_lastkey;
                ini_write_real( "Teclado", "salto", t_slt );
                break;
            case 3: //ataque
                t_atq = keyboard_lastkey;
                ini_write_real( "Teclado", "ataque", t_atq );
                break;
            case 4: //pausa
                t_psa = keyboard_lastkey;
                ini_write_real( "Teclado", "pausa", t_psa );
                break;
        }
        ini_close();
        indice[6] += 1;
    }
    if( indice[6] &gt; 4 )
    {
        estado0 = 5; //regresar a men� teclado
        izq_prv = true; //prevenir un evento inesperado
        der_prv = true;
        slt_prv = true;
        atq_prv = true;
        psa_prv = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Estado 7: Men� joystick

if( estado == 7 )
{
    if( izq_prs or der_prs ) //mover cursor
    {
        sound_play( snPatear );
        indice[7] = not indice[7];
    }
    if( atq_prs )
    {
        sound_play( snPisar );
        estado0 = 4; //regresar a men� control
    }
    if( slt_prs or psa_prs ) //seleccionar
    {
        if( indice[7] == 0 )
        {
            sound_play( snPisar );
            estado0 = 8; //ir a definir (joystick)
            indice[8] = 0; //desde el primer �ndice
            for( i=1; i&lt;=48; i+=1 )
            { //inicializar los arreglos para detectar eventos presi�n
                j1_estado[i] = joystick_check( 1, i );
                j1_prev[i] = j1_estado[i];
            }
        }
        else
        {
            sound_play( snMoneda );
            scReiniciarJoystick();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Estado 8: Definir joystick

if( estado == 8 )
{
    for( i=1; i&lt;=48; i+=1 ) //actualizar estado del joystick
        j1_estado[i] = joystick_check( 1, i );
        
    for( i=1; i&lt;=48; i+=1 ) //detectar la presi�n de un bot�n
        if( j1_estado[i] and !j1_prev[i] ) break;
        
    if( i &lt;= 48 ) //modificar bot�n
    {
        sound_play( snAtacar );
        ini_open( "smll.ini" )
        switch( indice[8] )
        {
            case 0: j_izq = i; //izquierda
                ini_write_real( "Joystick", "izquierda", i );
                break;
            case 1: j_der = i; //derecha
                ini_write_real( "Joystick", "derecha", i );
                break;
            case 2: j_slt = i; //salto
                ini_write_real( "Joystick", "salto", i );
                break;
            case 3: j_atq = i; //ataque
                ini_write_real( "Joystick", "ataque", i );
                break;
            case 4: j_psa = i; //pausa
                ini_write_real( "Joystick", "pausa", i );
                break;
        }
        ini_close();
        indice[8] += 1;
    }
    if( indice[8] &gt; 4 )
    {
        estado0 = 7; //regresar a men� teclado
        izq_prv = true; //prevenir un evento inesperado
        der_prv = true;
        slt_prv = true;
        atq_prv = true;
        psa_prv = true;
    }
    
    for( i=1; i&lt;=48; i+=1 ) //el estado actual pasa a ser el estado previo
        j1_prev[i] = j1_estado[i];
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///estado = estado0;

estado = estado0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Estado 0: Men� ajustes

if( estado == 0 )
{
    draw_sprite( spMenuAjustes,0, 30,30 );
    draw_sprite( spMenuAjustes,1, 60,75 );
    draw_sprite( spMenuAjustes,4, 60,120 );
    if( indice[0] == 0 )
        draw_sprite( spMenuAjustes,14, 30,75 );
    else
        draw_sprite( spMenuAjustes,14, 30,120 );
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Estado 1, 2 y 3: Men� sonido

if( estado==1 or estado==2 or estado==3 )
{
    draw_sprite( spMenuAjustes,1, 30,30 );
    draw_sprite( spMenuAjustes,2, 60,75 );
    draw_rectangle( 60,105, vol_mus*15+60,120, false );
    draw_sprite( spMenuAjustes,3, 60,150 );
    draw_rectangle( 60,180, vol_efc*15+60,195, false );
}
if( estado == 1 )
{
    if( indice[1] == 0 )
        draw_sprite( spMenuAjustes,14, 30,75 );
    else
        draw_sprite( spMenuAjustes,14, 30,150 );
}
if( estado == 2 ) draw_sprite( spMenuAjustes,14, 30,105 );
if( estado == 3 ) draw_sprite( spMenuAjustes,14, 30,180 );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Estado 4: Men� control

if( estado == 4 )
{
    draw_sprite( spMenuAjustes,4, 30,30 );
    draw_sprite( spMenuAjustes,5, 60,75 );
    draw_sprite( spMenuAjustes,7, 60,120 );
    if( indice[4] == 0 )
        draw_sprite( spMenuAjustes,14, 30,75 );
    else
        draw_sprite( spMenuAjustes,14, 30,120 );
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Estado 5: Men� teclado

if( estado == 5 )
{
    draw_sprite( spMenuAjustes,5, 30,30 );
    draw_sprite( spMenuAjustes,6, 60,75 );
    draw_sprite( spMenuAjustes,8, 60,120 );
    if( indice[5] == 0 )
        draw_sprite( spMenuAjustes,14, 30,75 );
    else
        draw_sprite( spMenuAjustes,14, 30,120 );
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Estado 6: Definir teclado

if( estado == 6 )
{
    draw_sprite( spMenuAjustes,5, 30,30 );
    switch( indice[6] )
    {
        case 0: //izquierda
            draw_sprite( spMenuAjustes,9, 60,105 );
            break;
        case 1: //derecha
            draw_sprite( spMenuAjustes,10, 60,105 );
            break;
        case 2: //salto
            draw_sprite( spMenuAjustes,11, 60,105 );
            break;
        case 3: //ataque
            draw_sprite( spMenuAjustes,12, 60,105 );
            break;
        case 4: //pausa
            draw_sprite( spMenuAjustes,13, 60,105 );
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Estado 7: Men� joystick

if( estado == 7 )
{
    draw_sprite( spMenuAjustes,7, 30,30 );
    draw_sprite( spMenuAjustes,6, 60,75 );
    draw_sprite( spMenuAjustes,8, 60,120 );
    if( indice[7] == 0 )
        draw_sprite( spMenuAjustes,14, 30,75 );
    else
        draw_sprite( spMenuAjustes,14, 30,120 );
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Estado 8: Definir joystick

if( estado == 8 )
{
    draw_sprite( spMenuAjustes,7, 30,30 );
    switch( indice[8] )
    {
        case 0: //izquierda
            draw_sprite( spMenuAjustes,9, 60,105 );
            break;
        case 1: //derecha
            draw_sprite( spMenuAjustes,10, 60,105 );
            break;
        case 2: //salto
            draw_sprite( spMenuAjustes,11, 60,105 );
            break;
        case 3: //ataque
            draw_sprite( spMenuAjustes,12, 60,105 );
            break;
        case 4: //pausa
            draw_sprite( spMenuAjustes,13, 60,105 );
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pantalla completa

if( keyboard_check( vk_enter ) )
    window_set_fullscreen( not window_get_fullscreen() );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pantalla completa

if( keyboard_check( vk_alt ) )
    window_set_fullscreen( not window_get_fullscreen() );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
